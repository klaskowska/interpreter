Składnia tego języka programowania jest wzorowana na składni języka C++. 
Poniżej opisuję najważniejsze oraz nietypowe konstrukcje.
1. Program składa się z deklaracji funkcji. Jeśli zostanie zadeklarowana funkcja `int main()`, to jej ciało się wykona.
2. Dla funkcji `int main()` nie podajemy argumentów. Ta funkcja wymaga zwrócenia liczby.
3. Nie ma możliwości definiowania zmiennych globalnych. 
4. Funkcje globalne muszą mieć unikalne nazwy.
5. Wartość warunków logicznych to tylko true/false (nie mogą być liczbami ani napisami).
6. Funkcje typu `void` nie muszą zwracać (nie muszą mieć `return`).
7. Przekazywanie parametrów przez wartość standardowo, a przez zmienną z użyciem `&` (jak w C++). 
8. Aby zadeklarować funkcję lokalnie, trzeba przypisać lambdę do zmiennej odpowiedniego typu (typ: `function<Type>[Type]`, lambda: `lambda([Arg]) -> Type Block`).
9. Obliczanie wyrażeń bez przypisania na zmienną: poprzedzając obliczenie słowem `calc`.
10. Konstrukcje if, if else zakończone słowem `endif`. Konstrukcja `while` zakończona słowem `endwhile`.
11. Wypisywanie wartości na wyjście przy pomocy instrukcji `print_int[Expr]` dla liczb oraz `print_str[Expr]` dla napisów.
12. Można zadeklarować funkcje o nazwie `print_int`, `print_str`, ale to nie nadpisze wbudowanych instrukcji.


